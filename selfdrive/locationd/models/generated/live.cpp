#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5893259616952359995) {
   out_5893259616952359995[0] = 0;
   out_5893259616952359995[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5893259616952359995[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5893259616952359995[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5893259616952359995[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5893259616952359995[5] = -sin(in_vec[1]);
   out_5893259616952359995[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5893259616952359995[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5893259616952359995[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5893259616952359995[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5893259616952359995[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5893259616952359995[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5893259616952359995[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5893259616952359995[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5893259616952359995[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5893259616952359995[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5893259616952359995[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5893259616952359995[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4830021671970159035) {
   out_4830021671970159035[0] = delta_x[0] + nom_x[0];
   out_4830021671970159035[1] = delta_x[1] + nom_x[1];
   out_4830021671970159035[2] = delta_x[2] + nom_x[2];
   out_4830021671970159035[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4830021671970159035[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4830021671970159035[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4830021671970159035[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4830021671970159035[7] = delta_x[6] + nom_x[7];
   out_4830021671970159035[8] = delta_x[7] + nom_x[8];
   out_4830021671970159035[9] = delta_x[8] + nom_x[9];
   out_4830021671970159035[10] = delta_x[9] + nom_x[10];
   out_4830021671970159035[11] = delta_x[10] + nom_x[11];
   out_4830021671970159035[12] = delta_x[11] + nom_x[12];
   out_4830021671970159035[13] = delta_x[12] + nom_x[13];
   out_4830021671970159035[14] = delta_x[13] + nom_x[14];
   out_4830021671970159035[15] = delta_x[14] + nom_x[15];
   out_4830021671970159035[16] = delta_x[15] + nom_x[16];
   out_4830021671970159035[17] = delta_x[16] + nom_x[17];
   out_4830021671970159035[18] = delta_x[17] + nom_x[18];
   out_4830021671970159035[19] = delta_x[18] + nom_x[19];
   out_4830021671970159035[20] = delta_x[19] + nom_x[20];
   out_4830021671970159035[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_3922488873627355783) {
   out_3922488873627355783[0] = -nom_x[0] + true_x[0];
   out_3922488873627355783[1] = -nom_x[1] + true_x[1];
   out_3922488873627355783[2] = -nom_x[2] + true_x[2];
   out_3922488873627355783[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_3922488873627355783[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_3922488873627355783[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_3922488873627355783[6] = -nom_x[7] + true_x[7];
   out_3922488873627355783[7] = -nom_x[8] + true_x[8];
   out_3922488873627355783[8] = -nom_x[9] + true_x[9];
   out_3922488873627355783[9] = -nom_x[10] + true_x[10];
   out_3922488873627355783[10] = -nom_x[11] + true_x[11];
   out_3922488873627355783[11] = -nom_x[12] + true_x[12];
   out_3922488873627355783[12] = -nom_x[13] + true_x[13];
   out_3922488873627355783[13] = -nom_x[14] + true_x[14];
   out_3922488873627355783[14] = -nom_x[15] + true_x[15];
   out_3922488873627355783[15] = -nom_x[16] + true_x[16];
   out_3922488873627355783[16] = -nom_x[17] + true_x[17];
   out_3922488873627355783[17] = -nom_x[18] + true_x[18];
   out_3922488873627355783[18] = -nom_x[19] + true_x[19];
   out_3922488873627355783[19] = -nom_x[20] + true_x[20];
   out_3922488873627355783[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5660387373054586398) {
   out_5660387373054586398[0] = 1.0;
   out_5660387373054586398[1] = 0;
   out_5660387373054586398[2] = 0;
   out_5660387373054586398[3] = 0;
   out_5660387373054586398[4] = 0;
   out_5660387373054586398[5] = 0;
   out_5660387373054586398[6] = 0;
   out_5660387373054586398[7] = 0;
   out_5660387373054586398[8] = 0;
   out_5660387373054586398[9] = 0;
   out_5660387373054586398[10] = 0;
   out_5660387373054586398[11] = 0;
   out_5660387373054586398[12] = 0;
   out_5660387373054586398[13] = 0;
   out_5660387373054586398[14] = 0;
   out_5660387373054586398[15] = 0;
   out_5660387373054586398[16] = 0;
   out_5660387373054586398[17] = 0;
   out_5660387373054586398[18] = 0;
   out_5660387373054586398[19] = 0;
   out_5660387373054586398[20] = 0;
   out_5660387373054586398[21] = 0;
   out_5660387373054586398[22] = 1.0;
   out_5660387373054586398[23] = 0;
   out_5660387373054586398[24] = 0;
   out_5660387373054586398[25] = 0;
   out_5660387373054586398[26] = 0;
   out_5660387373054586398[27] = 0;
   out_5660387373054586398[28] = 0;
   out_5660387373054586398[29] = 0;
   out_5660387373054586398[30] = 0;
   out_5660387373054586398[31] = 0;
   out_5660387373054586398[32] = 0;
   out_5660387373054586398[33] = 0;
   out_5660387373054586398[34] = 0;
   out_5660387373054586398[35] = 0;
   out_5660387373054586398[36] = 0;
   out_5660387373054586398[37] = 0;
   out_5660387373054586398[38] = 0;
   out_5660387373054586398[39] = 0;
   out_5660387373054586398[40] = 0;
   out_5660387373054586398[41] = 0;
   out_5660387373054586398[42] = 0;
   out_5660387373054586398[43] = 0;
   out_5660387373054586398[44] = 1.0;
   out_5660387373054586398[45] = 0;
   out_5660387373054586398[46] = 0;
   out_5660387373054586398[47] = 0;
   out_5660387373054586398[48] = 0;
   out_5660387373054586398[49] = 0;
   out_5660387373054586398[50] = 0;
   out_5660387373054586398[51] = 0;
   out_5660387373054586398[52] = 0;
   out_5660387373054586398[53] = 0;
   out_5660387373054586398[54] = 0;
   out_5660387373054586398[55] = 0;
   out_5660387373054586398[56] = 0;
   out_5660387373054586398[57] = 0;
   out_5660387373054586398[58] = 0;
   out_5660387373054586398[59] = 0;
   out_5660387373054586398[60] = 0;
   out_5660387373054586398[61] = 0;
   out_5660387373054586398[62] = 0;
   out_5660387373054586398[63] = 0;
   out_5660387373054586398[64] = 0;
   out_5660387373054586398[65] = 0;
   out_5660387373054586398[66] = -0.5*state[4];
   out_5660387373054586398[67] = -0.5*state[5];
   out_5660387373054586398[68] = -0.5*state[6];
   out_5660387373054586398[69] = 0;
   out_5660387373054586398[70] = 0;
   out_5660387373054586398[71] = 0;
   out_5660387373054586398[72] = 0;
   out_5660387373054586398[73] = 0;
   out_5660387373054586398[74] = 0;
   out_5660387373054586398[75] = 0;
   out_5660387373054586398[76] = 0;
   out_5660387373054586398[77] = 0;
   out_5660387373054586398[78] = 0;
   out_5660387373054586398[79] = 0;
   out_5660387373054586398[80] = 0;
   out_5660387373054586398[81] = 0;
   out_5660387373054586398[82] = 0;
   out_5660387373054586398[83] = 0;
   out_5660387373054586398[84] = 0;
   out_5660387373054586398[85] = 0;
   out_5660387373054586398[86] = 0;
   out_5660387373054586398[87] = 0.5*state[3];
   out_5660387373054586398[88] = 0.5*state[6];
   out_5660387373054586398[89] = -0.5*state[5];
   out_5660387373054586398[90] = 0;
   out_5660387373054586398[91] = 0;
   out_5660387373054586398[92] = 0;
   out_5660387373054586398[93] = 0;
   out_5660387373054586398[94] = 0;
   out_5660387373054586398[95] = 0;
   out_5660387373054586398[96] = 0;
   out_5660387373054586398[97] = 0;
   out_5660387373054586398[98] = 0;
   out_5660387373054586398[99] = 0;
   out_5660387373054586398[100] = 0;
   out_5660387373054586398[101] = 0;
   out_5660387373054586398[102] = 0;
   out_5660387373054586398[103] = 0;
   out_5660387373054586398[104] = 0;
   out_5660387373054586398[105] = 0;
   out_5660387373054586398[106] = 0;
   out_5660387373054586398[107] = 0;
   out_5660387373054586398[108] = -0.5*state[6];
   out_5660387373054586398[109] = 0.5*state[3];
   out_5660387373054586398[110] = 0.5*state[4];
   out_5660387373054586398[111] = 0;
   out_5660387373054586398[112] = 0;
   out_5660387373054586398[113] = 0;
   out_5660387373054586398[114] = 0;
   out_5660387373054586398[115] = 0;
   out_5660387373054586398[116] = 0;
   out_5660387373054586398[117] = 0;
   out_5660387373054586398[118] = 0;
   out_5660387373054586398[119] = 0;
   out_5660387373054586398[120] = 0;
   out_5660387373054586398[121] = 0;
   out_5660387373054586398[122] = 0;
   out_5660387373054586398[123] = 0;
   out_5660387373054586398[124] = 0;
   out_5660387373054586398[125] = 0;
   out_5660387373054586398[126] = 0;
   out_5660387373054586398[127] = 0;
   out_5660387373054586398[128] = 0;
   out_5660387373054586398[129] = 0.5*state[5];
   out_5660387373054586398[130] = -0.5*state[4];
   out_5660387373054586398[131] = 0.5*state[3];
   out_5660387373054586398[132] = 0;
   out_5660387373054586398[133] = 0;
   out_5660387373054586398[134] = 0;
   out_5660387373054586398[135] = 0;
   out_5660387373054586398[136] = 0;
   out_5660387373054586398[137] = 0;
   out_5660387373054586398[138] = 0;
   out_5660387373054586398[139] = 0;
   out_5660387373054586398[140] = 0;
   out_5660387373054586398[141] = 0;
   out_5660387373054586398[142] = 0;
   out_5660387373054586398[143] = 0;
   out_5660387373054586398[144] = 0;
   out_5660387373054586398[145] = 0;
   out_5660387373054586398[146] = 0;
   out_5660387373054586398[147] = 0;
   out_5660387373054586398[148] = 0;
   out_5660387373054586398[149] = 0;
   out_5660387373054586398[150] = 0;
   out_5660387373054586398[151] = 0;
   out_5660387373054586398[152] = 0;
   out_5660387373054586398[153] = 1.0;
   out_5660387373054586398[154] = 0;
   out_5660387373054586398[155] = 0;
   out_5660387373054586398[156] = 0;
   out_5660387373054586398[157] = 0;
   out_5660387373054586398[158] = 0;
   out_5660387373054586398[159] = 0;
   out_5660387373054586398[160] = 0;
   out_5660387373054586398[161] = 0;
   out_5660387373054586398[162] = 0;
   out_5660387373054586398[163] = 0;
   out_5660387373054586398[164] = 0;
   out_5660387373054586398[165] = 0;
   out_5660387373054586398[166] = 0;
   out_5660387373054586398[167] = 0;
   out_5660387373054586398[168] = 0;
   out_5660387373054586398[169] = 0;
   out_5660387373054586398[170] = 0;
   out_5660387373054586398[171] = 0;
   out_5660387373054586398[172] = 0;
   out_5660387373054586398[173] = 0;
   out_5660387373054586398[174] = 0;
   out_5660387373054586398[175] = 1.0;
   out_5660387373054586398[176] = 0;
   out_5660387373054586398[177] = 0;
   out_5660387373054586398[178] = 0;
   out_5660387373054586398[179] = 0;
   out_5660387373054586398[180] = 0;
   out_5660387373054586398[181] = 0;
   out_5660387373054586398[182] = 0;
   out_5660387373054586398[183] = 0;
   out_5660387373054586398[184] = 0;
   out_5660387373054586398[185] = 0;
   out_5660387373054586398[186] = 0;
   out_5660387373054586398[187] = 0;
   out_5660387373054586398[188] = 0;
   out_5660387373054586398[189] = 0;
   out_5660387373054586398[190] = 0;
   out_5660387373054586398[191] = 0;
   out_5660387373054586398[192] = 0;
   out_5660387373054586398[193] = 0;
   out_5660387373054586398[194] = 0;
   out_5660387373054586398[195] = 0;
   out_5660387373054586398[196] = 0;
   out_5660387373054586398[197] = 1.0;
   out_5660387373054586398[198] = 0;
   out_5660387373054586398[199] = 0;
   out_5660387373054586398[200] = 0;
   out_5660387373054586398[201] = 0;
   out_5660387373054586398[202] = 0;
   out_5660387373054586398[203] = 0;
   out_5660387373054586398[204] = 0;
   out_5660387373054586398[205] = 0;
   out_5660387373054586398[206] = 0;
   out_5660387373054586398[207] = 0;
   out_5660387373054586398[208] = 0;
   out_5660387373054586398[209] = 0;
   out_5660387373054586398[210] = 0;
   out_5660387373054586398[211] = 0;
   out_5660387373054586398[212] = 0;
   out_5660387373054586398[213] = 0;
   out_5660387373054586398[214] = 0;
   out_5660387373054586398[215] = 0;
   out_5660387373054586398[216] = 0;
   out_5660387373054586398[217] = 0;
   out_5660387373054586398[218] = 0;
   out_5660387373054586398[219] = 1.0;
   out_5660387373054586398[220] = 0;
   out_5660387373054586398[221] = 0;
   out_5660387373054586398[222] = 0;
   out_5660387373054586398[223] = 0;
   out_5660387373054586398[224] = 0;
   out_5660387373054586398[225] = 0;
   out_5660387373054586398[226] = 0;
   out_5660387373054586398[227] = 0;
   out_5660387373054586398[228] = 0;
   out_5660387373054586398[229] = 0;
   out_5660387373054586398[230] = 0;
   out_5660387373054586398[231] = 0;
   out_5660387373054586398[232] = 0;
   out_5660387373054586398[233] = 0;
   out_5660387373054586398[234] = 0;
   out_5660387373054586398[235] = 0;
   out_5660387373054586398[236] = 0;
   out_5660387373054586398[237] = 0;
   out_5660387373054586398[238] = 0;
   out_5660387373054586398[239] = 0;
   out_5660387373054586398[240] = 0;
   out_5660387373054586398[241] = 1.0;
   out_5660387373054586398[242] = 0;
   out_5660387373054586398[243] = 0;
   out_5660387373054586398[244] = 0;
   out_5660387373054586398[245] = 0;
   out_5660387373054586398[246] = 0;
   out_5660387373054586398[247] = 0;
   out_5660387373054586398[248] = 0;
   out_5660387373054586398[249] = 0;
   out_5660387373054586398[250] = 0;
   out_5660387373054586398[251] = 0;
   out_5660387373054586398[252] = 0;
   out_5660387373054586398[253] = 0;
   out_5660387373054586398[254] = 0;
   out_5660387373054586398[255] = 0;
   out_5660387373054586398[256] = 0;
   out_5660387373054586398[257] = 0;
   out_5660387373054586398[258] = 0;
   out_5660387373054586398[259] = 0;
   out_5660387373054586398[260] = 0;
   out_5660387373054586398[261] = 0;
   out_5660387373054586398[262] = 0;
   out_5660387373054586398[263] = 1.0;
   out_5660387373054586398[264] = 0;
   out_5660387373054586398[265] = 0;
   out_5660387373054586398[266] = 0;
   out_5660387373054586398[267] = 0;
   out_5660387373054586398[268] = 0;
   out_5660387373054586398[269] = 0;
   out_5660387373054586398[270] = 0;
   out_5660387373054586398[271] = 0;
   out_5660387373054586398[272] = 0;
   out_5660387373054586398[273] = 0;
   out_5660387373054586398[274] = 0;
   out_5660387373054586398[275] = 0;
   out_5660387373054586398[276] = 0;
   out_5660387373054586398[277] = 0;
   out_5660387373054586398[278] = 0;
   out_5660387373054586398[279] = 0;
   out_5660387373054586398[280] = 0;
   out_5660387373054586398[281] = 0;
   out_5660387373054586398[282] = 0;
   out_5660387373054586398[283] = 0;
   out_5660387373054586398[284] = 0;
   out_5660387373054586398[285] = 1.0;
   out_5660387373054586398[286] = 0;
   out_5660387373054586398[287] = 0;
   out_5660387373054586398[288] = 0;
   out_5660387373054586398[289] = 0;
   out_5660387373054586398[290] = 0;
   out_5660387373054586398[291] = 0;
   out_5660387373054586398[292] = 0;
   out_5660387373054586398[293] = 0;
   out_5660387373054586398[294] = 0;
   out_5660387373054586398[295] = 0;
   out_5660387373054586398[296] = 0;
   out_5660387373054586398[297] = 0;
   out_5660387373054586398[298] = 0;
   out_5660387373054586398[299] = 0;
   out_5660387373054586398[300] = 0;
   out_5660387373054586398[301] = 0;
   out_5660387373054586398[302] = 0;
   out_5660387373054586398[303] = 0;
   out_5660387373054586398[304] = 0;
   out_5660387373054586398[305] = 0;
   out_5660387373054586398[306] = 0;
   out_5660387373054586398[307] = 1.0;
   out_5660387373054586398[308] = 0;
   out_5660387373054586398[309] = 0;
   out_5660387373054586398[310] = 0;
   out_5660387373054586398[311] = 0;
   out_5660387373054586398[312] = 0;
   out_5660387373054586398[313] = 0;
   out_5660387373054586398[314] = 0;
   out_5660387373054586398[315] = 0;
   out_5660387373054586398[316] = 0;
   out_5660387373054586398[317] = 0;
   out_5660387373054586398[318] = 0;
   out_5660387373054586398[319] = 0;
   out_5660387373054586398[320] = 0;
   out_5660387373054586398[321] = 0;
   out_5660387373054586398[322] = 0;
   out_5660387373054586398[323] = 0;
   out_5660387373054586398[324] = 0;
   out_5660387373054586398[325] = 0;
   out_5660387373054586398[326] = 0;
   out_5660387373054586398[327] = 0;
   out_5660387373054586398[328] = 0;
   out_5660387373054586398[329] = 1.0;
   out_5660387373054586398[330] = 0;
   out_5660387373054586398[331] = 0;
   out_5660387373054586398[332] = 0;
   out_5660387373054586398[333] = 0;
   out_5660387373054586398[334] = 0;
   out_5660387373054586398[335] = 0;
   out_5660387373054586398[336] = 0;
   out_5660387373054586398[337] = 0;
   out_5660387373054586398[338] = 0;
   out_5660387373054586398[339] = 0;
   out_5660387373054586398[340] = 0;
   out_5660387373054586398[341] = 0;
   out_5660387373054586398[342] = 0;
   out_5660387373054586398[343] = 0;
   out_5660387373054586398[344] = 0;
   out_5660387373054586398[345] = 0;
   out_5660387373054586398[346] = 0;
   out_5660387373054586398[347] = 0;
   out_5660387373054586398[348] = 0;
   out_5660387373054586398[349] = 0;
   out_5660387373054586398[350] = 0;
   out_5660387373054586398[351] = 1.0;
   out_5660387373054586398[352] = 0;
   out_5660387373054586398[353] = 0;
   out_5660387373054586398[354] = 0;
   out_5660387373054586398[355] = 0;
   out_5660387373054586398[356] = 0;
   out_5660387373054586398[357] = 0;
   out_5660387373054586398[358] = 0;
   out_5660387373054586398[359] = 0;
   out_5660387373054586398[360] = 0;
   out_5660387373054586398[361] = 0;
   out_5660387373054586398[362] = 0;
   out_5660387373054586398[363] = 0;
   out_5660387373054586398[364] = 0;
   out_5660387373054586398[365] = 0;
   out_5660387373054586398[366] = 0;
   out_5660387373054586398[367] = 0;
   out_5660387373054586398[368] = 0;
   out_5660387373054586398[369] = 0;
   out_5660387373054586398[370] = 0;
   out_5660387373054586398[371] = 0;
   out_5660387373054586398[372] = 0;
   out_5660387373054586398[373] = 1.0;
   out_5660387373054586398[374] = 0;
   out_5660387373054586398[375] = 0;
   out_5660387373054586398[376] = 0;
   out_5660387373054586398[377] = 0;
   out_5660387373054586398[378] = 0;
   out_5660387373054586398[379] = 0;
   out_5660387373054586398[380] = 0;
   out_5660387373054586398[381] = 0;
   out_5660387373054586398[382] = 0;
   out_5660387373054586398[383] = 0;
   out_5660387373054586398[384] = 0;
   out_5660387373054586398[385] = 0;
   out_5660387373054586398[386] = 0;
   out_5660387373054586398[387] = 0;
   out_5660387373054586398[388] = 0;
   out_5660387373054586398[389] = 0;
   out_5660387373054586398[390] = 0;
   out_5660387373054586398[391] = 0;
   out_5660387373054586398[392] = 0;
   out_5660387373054586398[393] = 0;
   out_5660387373054586398[394] = 0;
   out_5660387373054586398[395] = 1.0;
   out_5660387373054586398[396] = 0;
   out_5660387373054586398[397] = 0;
   out_5660387373054586398[398] = 0;
   out_5660387373054586398[399] = 0;
   out_5660387373054586398[400] = 0;
   out_5660387373054586398[401] = 0;
   out_5660387373054586398[402] = 0;
   out_5660387373054586398[403] = 0;
   out_5660387373054586398[404] = 0;
   out_5660387373054586398[405] = 0;
   out_5660387373054586398[406] = 0;
   out_5660387373054586398[407] = 0;
   out_5660387373054586398[408] = 0;
   out_5660387373054586398[409] = 0;
   out_5660387373054586398[410] = 0;
   out_5660387373054586398[411] = 0;
   out_5660387373054586398[412] = 0;
   out_5660387373054586398[413] = 0;
   out_5660387373054586398[414] = 0;
   out_5660387373054586398[415] = 0;
   out_5660387373054586398[416] = 0;
   out_5660387373054586398[417] = 1.0;
   out_5660387373054586398[418] = 0;
   out_5660387373054586398[419] = 0;
   out_5660387373054586398[420] = 0;
   out_5660387373054586398[421] = 0;
   out_5660387373054586398[422] = 0;
   out_5660387373054586398[423] = 0;
   out_5660387373054586398[424] = 0;
   out_5660387373054586398[425] = 0;
   out_5660387373054586398[426] = 0;
   out_5660387373054586398[427] = 0;
   out_5660387373054586398[428] = 0;
   out_5660387373054586398[429] = 0;
   out_5660387373054586398[430] = 0;
   out_5660387373054586398[431] = 0;
   out_5660387373054586398[432] = 0;
   out_5660387373054586398[433] = 0;
   out_5660387373054586398[434] = 0;
   out_5660387373054586398[435] = 0;
   out_5660387373054586398[436] = 0;
   out_5660387373054586398[437] = 0;
   out_5660387373054586398[438] = 0;
   out_5660387373054586398[439] = 1.0;
   out_5660387373054586398[440] = 0;
   out_5660387373054586398[441] = 0;
   out_5660387373054586398[442] = 0;
   out_5660387373054586398[443] = 0;
   out_5660387373054586398[444] = 0;
   out_5660387373054586398[445] = 0;
   out_5660387373054586398[446] = 0;
   out_5660387373054586398[447] = 0;
   out_5660387373054586398[448] = 0;
   out_5660387373054586398[449] = 0;
   out_5660387373054586398[450] = 0;
   out_5660387373054586398[451] = 0;
   out_5660387373054586398[452] = 0;
   out_5660387373054586398[453] = 0;
   out_5660387373054586398[454] = 0;
   out_5660387373054586398[455] = 0;
   out_5660387373054586398[456] = 0;
   out_5660387373054586398[457] = 0;
   out_5660387373054586398[458] = 0;
   out_5660387373054586398[459] = 0;
   out_5660387373054586398[460] = 0;
   out_5660387373054586398[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8710621012237093742) {
   out_8710621012237093742[0] = dt*state[7] + state[0];
   out_8710621012237093742[1] = dt*state[8] + state[1];
   out_8710621012237093742[2] = dt*state[9] + state[2];
   out_8710621012237093742[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8710621012237093742[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8710621012237093742[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8710621012237093742[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8710621012237093742[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8710621012237093742[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8710621012237093742[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8710621012237093742[10] = state[10];
   out_8710621012237093742[11] = state[11];
   out_8710621012237093742[12] = state[12];
   out_8710621012237093742[13] = state[13];
   out_8710621012237093742[14] = state[14];
   out_8710621012237093742[15] = state[15];
   out_8710621012237093742[16] = state[16];
   out_8710621012237093742[17] = state[17];
   out_8710621012237093742[18] = state[18];
   out_8710621012237093742[19] = state[19];
   out_8710621012237093742[20] = state[20];
   out_8710621012237093742[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7370016201918838578) {
   out_7370016201918838578[0] = 1;
   out_7370016201918838578[1] = 0;
   out_7370016201918838578[2] = 0;
   out_7370016201918838578[3] = 0;
   out_7370016201918838578[4] = 0;
   out_7370016201918838578[5] = 0;
   out_7370016201918838578[6] = dt;
   out_7370016201918838578[7] = 0;
   out_7370016201918838578[8] = 0;
   out_7370016201918838578[9] = 0;
   out_7370016201918838578[10] = 0;
   out_7370016201918838578[11] = 0;
   out_7370016201918838578[12] = 0;
   out_7370016201918838578[13] = 0;
   out_7370016201918838578[14] = 0;
   out_7370016201918838578[15] = 0;
   out_7370016201918838578[16] = 0;
   out_7370016201918838578[17] = 0;
   out_7370016201918838578[18] = 0;
   out_7370016201918838578[19] = 0;
   out_7370016201918838578[20] = 0;
   out_7370016201918838578[21] = 0;
   out_7370016201918838578[22] = 1;
   out_7370016201918838578[23] = 0;
   out_7370016201918838578[24] = 0;
   out_7370016201918838578[25] = 0;
   out_7370016201918838578[26] = 0;
   out_7370016201918838578[27] = 0;
   out_7370016201918838578[28] = dt;
   out_7370016201918838578[29] = 0;
   out_7370016201918838578[30] = 0;
   out_7370016201918838578[31] = 0;
   out_7370016201918838578[32] = 0;
   out_7370016201918838578[33] = 0;
   out_7370016201918838578[34] = 0;
   out_7370016201918838578[35] = 0;
   out_7370016201918838578[36] = 0;
   out_7370016201918838578[37] = 0;
   out_7370016201918838578[38] = 0;
   out_7370016201918838578[39] = 0;
   out_7370016201918838578[40] = 0;
   out_7370016201918838578[41] = 0;
   out_7370016201918838578[42] = 0;
   out_7370016201918838578[43] = 0;
   out_7370016201918838578[44] = 1;
   out_7370016201918838578[45] = 0;
   out_7370016201918838578[46] = 0;
   out_7370016201918838578[47] = 0;
   out_7370016201918838578[48] = 0;
   out_7370016201918838578[49] = 0;
   out_7370016201918838578[50] = dt;
   out_7370016201918838578[51] = 0;
   out_7370016201918838578[52] = 0;
   out_7370016201918838578[53] = 0;
   out_7370016201918838578[54] = 0;
   out_7370016201918838578[55] = 0;
   out_7370016201918838578[56] = 0;
   out_7370016201918838578[57] = 0;
   out_7370016201918838578[58] = 0;
   out_7370016201918838578[59] = 0;
   out_7370016201918838578[60] = 0;
   out_7370016201918838578[61] = 0;
   out_7370016201918838578[62] = 0;
   out_7370016201918838578[63] = 0;
   out_7370016201918838578[64] = 0;
   out_7370016201918838578[65] = 0;
   out_7370016201918838578[66] = 1;
   out_7370016201918838578[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7370016201918838578[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7370016201918838578[69] = 0;
   out_7370016201918838578[70] = 0;
   out_7370016201918838578[71] = 0;
   out_7370016201918838578[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7370016201918838578[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7370016201918838578[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7370016201918838578[75] = 0;
   out_7370016201918838578[76] = 0;
   out_7370016201918838578[77] = 0;
   out_7370016201918838578[78] = 0;
   out_7370016201918838578[79] = 0;
   out_7370016201918838578[80] = 0;
   out_7370016201918838578[81] = 0;
   out_7370016201918838578[82] = 0;
   out_7370016201918838578[83] = 0;
   out_7370016201918838578[84] = 0;
   out_7370016201918838578[85] = 0;
   out_7370016201918838578[86] = 0;
   out_7370016201918838578[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7370016201918838578[88] = 1;
   out_7370016201918838578[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7370016201918838578[90] = 0;
   out_7370016201918838578[91] = 0;
   out_7370016201918838578[92] = 0;
   out_7370016201918838578[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7370016201918838578[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7370016201918838578[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7370016201918838578[96] = 0;
   out_7370016201918838578[97] = 0;
   out_7370016201918838578[98] = 0;
   out_7370016201918838578[99] = 0;
   out_7370016201918838578[100] = 0;
   out_7370016201918838578[101] = 0;
   out_7370016201918838578[102] = 0;
   out_7370016201918838578[103] = 0;
   out_7370016201918838578[104] = 0;
   out_7370016201918838578[105] = 0;
   out_7370016201918838578[106] = 0;
   out_7370016201918838578[107] = 0;
   out_7370016201918838578[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7370016201918838578[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7370016201918838578[110] = 1;
   out_7370016201918838578[111] = 0;
   out_7370016201918838578[112] = 0;
   out_7370016201918838578[113] = 0;
   out_7370016201918838578[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7370016201918838578[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7370016201918838578[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7370016201918838578[117] = 0;
   out_7370016201918838578[118] = 0;
   out_7370016201918838578[119] = 0;
   out_7370016201918838578[120] = 0;
   out_7370016201918838578[121] = 0;
   out_7370016201918838578[122] = 0;
   out_7370016201918838578[123] = 0;
   out_7370016201918838578[124] = 0;
   out_7370016201918838578[125] = 0;
   out_7370016201918838578[126] = 0;
   out_7370016201918838578[127] = 0;
   out_7370016201918838578[128] = 0;
   out_7370016201918838578[129] = 0;
   out_7370016201918838578[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7370016201918838578[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7370016201918838578[132] = 1;
   out_7370016201918838578[133] = 0;
   out_7370016201918838578[134] = 0;
   out_7370016201918838578[135] = 0;
   out_7370016201918838578[136] = 0;
   out_7370016201918838578[137] = 0;
   out_7370016201918838578[138] = 0;
   out_7370016201918838578[139] = 0;
   out_7370016201918838578[140] = 0;
   out_7370016201918838578[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7370016201918838578[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7370016201918838578[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7370016201918838578[144] = 0;
   out_7370016201918838578[145] = 0;
   out_7370016201918838578[146] = 0;
   out_7370016201918838578[147] = 0;
   out_7370016201918838578[148] = 0;
   out_7370016201918838578[149] = 0;
   out_7370016201918838578[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7370016201918838578[151] = 0;
   out_7370016201918838578[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7370016201918838578[153] = 0;
   out_7370016201918838578[154] = 1;
   out_7370016201918838578[155] = 0;
   out_7370016201918838578[156] = 0;
   out_7370016201918838578[157] = 0;
   out_7370016201918838578[158] = 0;
   out_7370016201918838578[159] = 0;
   out_7370016201918838578[160] = 0;
   out_7370016201918838578[161] = 0;
   out_7370016201918838578[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7370016201918838578[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7370016201918838578[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7370016201918838578[165] = 0;
   out_7370016201918838578[166] = 0;
   out_7370016201918838578[167] = 0;
   out_7370016201918838578[168] = 0;
   out_7370016201918838578[169] = 0;
   out_7370016201918838578[170] = 0;
   out_7370016201918838578[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7370016201918838578[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7370016201918838578[173] = 0;
   out_7370016201918838578[174] = 0;
   out_7370016201918838578[175] = 0;
   out_7370016201918838578[176] = 1;
   out_7370016201918838578[177] = 0;
   out_7370016201918838578[178] = 0;
   out_7370016201918838578[179] = 0;
   out_7370016201918838578[180] = 0;
   out_7370016201918838578[181] = 0;
   out_7370016201918838578[182] = 0;
   out_7370016201918838578[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7370016201918838578[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7370016201918838578[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7370016201918838578[186] = 0;
   out_7370016201918838578[187] = 0;
   out_7370016201918838578[188] = 0;
   out_7370016201918838578[189] = 0;
   out_7370016201918838578[190] = 0;
   out_7370016201918838578[191] = 0;
   out_7370016201918838578[192] = 0;
   out_7370016201918838578[193] = 0;
   out_7370016201918838578[194] = 0;
   out_7370016201918838578[195] = 0;
   out_7370016201918838578[196] = 0;
   out_7370016201918838578[197] = 0;
   out_7370016201918838578[198] = 1;
   out_7370016201918838578[199] = 0;
   out_7370016201918838578[200] = 0;
   out_7370016201918838578[201] = 0;
   out_7370016201918838578[202] = 0;
   out_7370016201918838578[203] = 0;
   out_7370016201918838578[204] = 0;
   out_7370016201918838578[205] = 0;
   out_7370016201918838578[206] = 0;
   out_7370016201918838578[207] = 0;
   out_7370016201918838578[208] = 0;
   out_7370016201918838578[209] = 0;
   out_7370016201918838578[210] = 0;
   out_7370016201918838578[211] = 0;
   out_7370016201918838578[212] = 0;
   out_7370016201918838578[213] = 0;
   out_7370016201918838578[214] = 0;
   out_7370016201918838578[215] = 0;
   out_7370016201918838578[216] = 0;
   out_7370016201918838578[217] = 0;
   out_7370016201918838578[218] = 0;
   out_7370016201918838578[219] = 0;
   out_7370016201918838578[220] = 1;
   out_7370016201918838578[221] = 0;
   out_7370016201918838578[222] = 0;
   out_7370016201918838578[223] = 0;
   out_7370016201918838578[224] = 0;
   out_7370016201918838578[225] = 0;
   out_7370016201918838578[226] = 0;
   out_7370016201918838578[227] = 0;
   out_7370016201918838578[228] = 0;
   out_7370016201918838578[229] = 0;
   out_7370016201918838578[230] = 0;
   out_7370016201918838578[231] = 0;
   out_7370016201918838578[232] = 0;
   out_7370016201918838578[233] = 0;
   out_7370016201918838578[234] = 0;
   out_7370016201918838578[235] = 0;
   out_7370016201918838578[236] = 0;
   out_7370016201918838578[237] = 0;
   out_7370016201918838578[238] = 0;
   out_7370016201918838578[239] = 0;
   out_7370016201918838578[240] = 0;
   out_7370016201918838578[241] = 0;
   out_7370016201918838578[242] = 1;
   out_7370016201918838578[243] = 0;
   out_7370016201918838578[244] = 0;
   out_7370016201918838578[245] = 0;
   out_7370016201918838578[246] = 0;
   out_7370016201918838578[247] = 0;
   out_7370016201918838578[248] = 0;
   out_7370016201918838578[249] = 0;
   out_7370016201918838578[250] = 0;
   out_7370016201918838578[251] = 0;
   out_7370016201918838578[252] = 0;
   out_7370016201918838578[253] = 0;
   out_7370016201918838578[254] = 0;
   out_7370016201918838578[255] = 0;
   out_7370016201918838578[256] = 0;
   out_7370016201918838578[257] = 0;
   out_7370016201918838578[258] = 0;
   out_7370016201918838578[259] = 0;
   out_7370016201918838578[260] = 0;
   out_7370016201918838578[261] = 0;
   out_7370016201918838578[262] = 0;
   out_7370016201918838578[263] = 0;
   out_7370016201918838578[264] = 1;
   out_7370016201918838578[265] = 0;
   out_7370016201918838578[266] = 0;
   out_7370016201918838578[267] = 0;
   out_7370016201918838578[268] = 0;
   out_7370016201918838578[269] = 0;
   out_7370016201918838578[270] = 0;
   out_7370016201918838578[271] = 0;
   out_7370016201918838578[272] = 0;
   out_7370016201918838578[273] = 0;
   out_7370016201918838578[274] = 0;
   out_7370016201918838578[275] = 0;
   out_7370016201918838578[276] = 0;
   out_7370016201918838578[277] = 0;
   out_7370016201918838578[278] = 0;
   out_7370016201918838578[279] = 0;
   out_7370016201918838578[280] = 0;
   out_7370016201918838578[281] = 0;
   out_7370016201918838578[282] = 0;
   out_7370016201918838578[283] = 0;
   out_7370016201918838578[284] = 0;
   out_7370016201918838578[285] = 0;
   out_7370016201918838578[286] = 1;
   out_7370016201918838578[287] = 0;
   out_7370016201918838578[288] = 0;
   out_7370016201918838578[289] = 0;
   out_7370016201918838578[290] = 0;
   out_7370016201918838578[291] = 0;
   out_7370016201918838578[292] = 0;
   out_7370016201918838578[293] = 0;
   out_7370016201918838578[294] = 0;
   out_7370016201918838578[295] = 0;
   out_7370016201918838578[296] = 0;
   out_7370016201918838578[297] = 0;
   out_7370016201918838578[298] = 0;
   out_7370016201918838578[299] = 0;
   out_7370016201918838578[300] = 0;
   out_7370016201918838578[301] = 0;
   out_7370016201918838578[302] = 0;
   out_7370016201918838578[303] = 0;
   out_7370016201918838578[304] = 0;
   out_7370016201918838578[305] = 0;
   out_7370016201918838578[306] = 0;
   out_7370016201918838578[307] = 0;
   out_7370016201918838578[308] = 1;
   out_7370016201918838578[309] = 0;
   out_7370016201918838578[310] = 0;
   out_7370016201918838578[311] = 0;
   out_7370016201918838578[312] = 0;
   out_7370016201918838578[313] = 0;
   out_7370016201918838578[314] = 0;
   out_7370016201918838578[315] = 0;
   out_7370016201918838578[316] = 0;
   out_7370016201918838578[317] = 0;
   out_7370016201918838578[318] = 0;
   out_7370016201918838578[319] = 0;
   out_7370016201918838578[320] = 0;
   out_7370016201918838578[321] = 0;
   out_7370016201918838578[322] = 0;
   out_7370016201918838578[323] = 0;
   out_7370016201918838578[324] = 0;
   out_7370016201918838578[325] = 0;
   out_7370016201918838578[326] = 0;
   out_7370016201918838578[327] = 0;
   out_7370016201918838578[328] = 0;
   out_7370016201918838578[329] = 0;
   out_7370016201918838578[330] = 1;
   out_7370016201918838578[331] = 0;
   out_7370016201918838578[332] = 0;
   out_7370016201918838578[333] = 0;
   out_7370016201918838578[334] = 0;
   out_7370016201918838578[335] = 0;
   out_7370016201918838578[336] = 0;
   out_7370016201918838578[337] = 0;
   out_7370016201918838578[338] = 0;
   out_7370016201918838578[339] = 0;
   out_7370016201918838578[340] = 0;
   out_7370016201918838578[341] = 0;
   out_7370016201918838578[342] = 0;
   out_7370016201918838578[343] = 0;
   out_7370016201918838578[344] = 0;
   out_7370016201918838578[345] = 0;
   out_7370016201918838578[346] = 0;
   out_7370016201918838578[347] = 0;
   out_7370016201918838578[348] = 0;
   out_7370016201918838578[349] = 0;
   out_7370016201918838578[350] = 0;
   out_7370016201918838578[351] = 0;
   out_7370016201918838578[352] = 1;
   out_7370016201918838578[353] = 0;
   out_7370016201918838578[354] = 0;
   out_7370016201918838578[355] = 0;
   out_7370016201918838578[356] = 0;
   out_7370016201918838578[357] = 0;
   out_7370016201918838578[358] = 0;
   out_7370016201918838578[359] = 0;
   out_7370016201918838578[360] = 0;
   out_7370016201918838578[361] = 0;
   out_7370016201918838578[362] = 0;
   out_7370016201918838578[363] = 0;
   out_7370016201918838578[364] = 0;
   out_7370016201918838578[365] = 0;
   out_7370016201918838578[366] = 0;
   out_7370016201918838578[367] = 0;
   out_7370016201918838578[368] = 0;
   out_7370016201918838578[369] = 0;
   out_7370016201918838578[370] = 0;
   out_7370016201918838578[371] = 0;
   out_7370016201918838578[372] = 0;
   out_7370016201918838578[373] = 0;
   out_7370016201918838578[374] = 1;
   out_7370016201918838578[375] = 0;
   out_7370016201918838578[376] = 0;
   out_7370016201918838578[377] = 0;
   out_7370016201918838578[378] = 0;
   out_7370016201918838578[379] = 0;
   out_7370016201918838578[380] = 0;
   out_7370016201918838578[381] = 0;
   out_7370016201918838578[382] = 0;
   out_7370016201918838578[383] = 0;
   out_7370016201918838578[384] = 0;
   out_7370016201918838578[385] = 0;
   out_7370016201918838578[386] = 0;
   out_7370016201918838578[387] = 0;
   out_7370016201918838578[388] = 0;
   out_7370016201918838578[389] = 0;
   out_7370016201918838578[390] = 0;
   out_7370016201918838578[391] = 0;
   out_7370016201918838578[392] = 0;
   out_7370016201918838578[393] = 0;
   out_7370016201918838578[394] = 0;
   out_7370016201918838578[395] = 0;
   out_7370016201918838578[396] = 1;
   out_7370016201918838578[397] = 0;
   out_7370016201918838578[398] = 0;
   out_7370016201918838578[399] = 0;
   out_7370016201918838578[400] = 0;
   out_7370016201918838578[401] = 0;
   out_7370016201918838578[402] = 0;
   out_7370016201918838578[403] = 0;
   out_7370016201918838578[404] = 0;
   out_7370016201918838578[405] = 0;
   out_7370016201918838578[406] = 0;
   out_7370016201918838578[407] = 0;
   out_7370016201918838578[408] = 0;
   out_7370016201918838578[409] = 0;
   out_7370016201918838578[410] = 0;
   out_7370016201918838578[411] = 0;
   out_7370016201918838578[412] = 0;
   out_7370016201918838578[413] = 0;
   out_7370016201918838578[414] = 0;
   out_7370016201918838578[415] = 0;
   out_7370016201918838578[416] = 0;
   out_7370016201918838578[417] = 0;
   out_7370016201918838578[418] = 1;
   out_7370016201918838578[419] = 0;
   out_7370016201918838578[420] = 0;
   out_7370016201918838578[421] = 0;
   out_7370016201918838578[422] = 0;
   out_7370016201918838578[423] = 0;
   out_7370016201918838578[424] = 0;
   out_7370016201918838578[425] = 0;
   out_7370016201918838578[426] = 0;
   out_7370016201918838578[427] = 0;
   out_7370016201918838578[428] = 0;
   out_7370016201918838578[429] = 0;
   out_7370016201918838578[430] = 0;
   out_7370016201918838578[431] = 0;
   out_7370016201918838578[432] = 0;
   out_7370016201918838578[433] = 0;
   out_7370016201918838578[434] = 0;
   out_7370016201918838578[435] = 0;
   out_7370016201918838578[436] = 0;
   out_7370016201918838578[437] = 0;
   out_7370016201918838578[438] = 0;
   out_7370016201918838578[439] = 0;
   out_7370016201918838578[440] = 1;
}
void h_4(double *state, double *unused, double *out_1965350356141844935) {
   out_1965350356141844935[0] = state[10] + state[13];
   out_1965350356141844935[1] = state[11] + state[14];
   out_1965350356141844935[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5757122479151917060) {
   out_5757122479151917060[0] = 0;
   out_5757122479151917060[1] = 0;
   out_5757122479151917060[2] = 0;
   out_5757122479151917060[3] = 0;
   out_5757122479151917060[4] = 0;
   out_5757122479151917060[5] = 0;
   out_5757122479151917060[6] = 0;
   out_5757122479151917060[7] = 0;
   out_5757122479151917060[8] = 0;
   out_5757122479151917060[9] = 0;
   out_5757122479151917060[10] = 1;
   out_5757122479151917060[11] = 0;
   out_5757122479151917060[12] = 0;
   out_5757122479151917060[13] = 1;
   out_5757122479151917060[14] = 0;
   out_5757122479151917060[15] = 0;
   out_5757122479151917060[16] = 0;
   out_5757122479151917060[17] = 0;
   out_5757122479151917060[18] = 0;
   out_5757122479151917060[19] = 0;
   out_5757122479151917060[20] = 0;
   out_5757122479151917060[21] = 0;
   out_5757122479151917060[22] = 0;
   out_5757122479151917060[23] = 0;
   out_5757122479151917060[24] = 0;
   out_5757122479151917060[25] = 0;
   out_5757122479151917060[26] = 0;
   out_5757122479151917060[27] = 0;
   out_5757122479151917060[28] = 0;
   out_5757122479151917060[29] = 0;
   out_5757122479151917060[30] = 0;
   out_5757122479151917060[31] = 0;
   out_5757122479151917060[32] = 0;
   out_5757122479151917060[33] = 1;
   out_5757122479151917060[34] = 0;
   out_5757122479151917060[35] = 0;
   out_5757122479151917060[36] = 1;
   out_5757122479151917060[37] = 0;
   out_5757122479151917060[38] = 0;
   out_5757122479151917060[39] = 0;
   out_5757122479151917060[40] = 0;
   out_5757122479151917060[41] = 0;
   out_5757122479151917060[42] = 0;
   out_5757122479151917060[43] = 0;
   out_5757122479151917060[44] = 0;
   out_5757122479151917060[45] = 0;
   out_5757122479151917060[46] = 0;
   out_5757122479151917060[47] = 0;
   out_5757122479151917060[48] = 0;
   out_5757122479151917060[49] = 0;
   out_5757122479151917060[50] = 0;
   out_5757122479151917060[51] = 0;
   out_5757122479151917060[52] = 0;
   out_5757122479151917060[53] = 0;
   out_5757122479151917060[54] = 0;
   out_5757122479151917060[55] = 0;
   out_5757122479151917060[56] = 1;
   out_5757122479151917060[57] = 0;
   out_5757122479151917060[58] = 0;
   out_5757122479151917060[59] = 1;
   out_5757122479151917060[60] = 0;
   out_5757122479151917060[61] = 0;
   out_5757122479151917060[62] = 0;
   out_5757122479151917060[63] = 0;
   out_5757122479151917060[64] = 0;
   out_5757122479151917060[65] = 0;
}
void h_9(double *state, double *unused, double *out_8102558235427240065) {
   out_8102558235427240065[0] = state[10];
   out_8102558235427240065[1] = state[11];
   out_8102558235427240065[2] = state[12];
}
void H_9(double *state, double *unused, double *out_1530096456112530410) {
   out_1530096456112530410[0] = 0;
   out_1530096456112530410[1] = 0;
   out_1530096456112530410[2] = 0;
   out_1530096456112530410[3] = 0;
   out_1530096456112530410[4] = 0;
   out_1530096456112530410[5] = 0;
   out_1530096456112530410[6] = 0;
   out_1530096456112530410[7] = 0;
   out_1530096456112530410[8] = 0;
   out_1530096456112530410[9] = 0;
   out_1530096456112530410[10] = 1;
   out_1530096456112530410[11] = 0;
   out_1530096456112530410[12] = 0;
   out_1530096456112530410[13] = 0;
   out_1530096456112530410[14] = 0;
   out_1530096456112530410[15] = 0;
   out_1530096456112530410[16] = 0;
   out_1530096456112530410[17] = 0;
   out_1530096456112530410[18] = 0;
   out_1530096456112530410[19] = 0;
   out_1530096456112530410[20] = 0;
   out_1530096456112530410[21] = 0;
   out_1530096456112530410[22] = 0;
   out_1530096456112530410[23] = 0;
   out_1530096456112530410[24] = 0;
   out_1530096456112530410[25] = 0;
   out_1530096456112530410[26] = 0;
   out_1530096456112530410[27] = 0;
   out_1530096456112530410[28] = 0;
   out_1530096456112530410[29] = 0;
   out_1530096456112530410[30] = 0;
   out_1530096456112530410[31] = 0;
   out_1530096456112530410[32] = 0;
   out_1530096456112530410[33] = 1;
   out_1530096456112530410[34] = 0;
   out_1530096456112530410[35] = 0;
   out_1530096456112530410[36] = 0;
   out_1530096456112530410[37] = 0;
   out_1530096456112530410[38] = 0;
   out_1530096456112530410[39] = 0;
   out_1530096456112530410[40] = 0;
   out_1530096456112530410[41] = 0;
   out_1530096456112530410[42] = 0;
   out_1530096456112530410[43] = 0;
   out_1530096456112530410[44] = 0;
   out_1530096456112530410[45] = 0;
   out_1530096456112530410[46] = 0;
   out_1530096456112530410[47] = 0;
   out_1530096456112530410[48] = 0;
   out_1530096456112530410[49] = 0;
   out_1530096456112530410[50] = 0;
   out_1530096456112530410[51] = 0;
   out_1530096456112530410[52] = 0;
   out_1530096456112530410[53] = 0;
   out_1530096456112530410[54] = 0;
   out_1530096456112530410[55] = 0;
   out_1530096456112530410[56] = 1;
   out_1530096456112530410[57] = 0;
   out_1530096456112530410[58] = 0;
   out_1530096456112530410[59] = 0;
   out_1530096456112530410[60] = 0;
   out_1530096456112530410[61] = 0;
   out_1530096456112530410[62] = 0;
   out_1530096456112530410[63] = 0;
   out_1530096456112530410[64] = 0;
   out_1530096456112530410[65] = 0;
}
void h_10(double *state, double *unused, double *out_5367289565694616813) {
   out_5367289565694616813[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5367289565694616813[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5367289565694616813[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_492949424303976863) {
   out_492949424303976863[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_492949424303976863[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_492949424303976863[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_492949424303976863[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_492949424303976863[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_492949424303976863[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_492949424303976863[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_492949424303976863[7] = 0;
   out_492949424303976863[8] = 0;
   out_492949424303976863[9] = 0;
   out_492949424303976863[10] = 0;
   out_492949424303976863[11] = 0;
   out_492949424303976863[12] = 0;
   out_492949424303976863[13] = 0;
   out_492949424303976863[14] = 0;
   out_492949424303976863[15] = 0;
   out_492949424303976863[16] = 1;
   out_492949424303976863[17] = 0;
   out_492949424303976863[18] = 0;
   out_492949424303976863[19] = 1;
   out_492949424303976863[20] = 0;
   out_492949424303976863[21] = 0;
   out_492949424303976863[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_492949424303976863[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_492949424303976863[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_492949424303976863[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_492949424303976863[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_492949424303976863[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_492949424303976863[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_492949424303976863[29] = 0;
   out_492949424303976863[30] = 0;
   out_492949424303976863[31] = 0;
   out_492949424303976863[32] = 0;
   out_492949424303976863[33] = 0;
   out_492949424303976863[34] = 0;
   out_492949424303976863[35] = 0;
   out_492949424303976863[36] = 0;
   out_492949424303976863[37] = 0;
   out_492949424303976863[38] = 0;
   out_492949424303976863[39] = 1;
   out_492949424303976863[40] = 0;
   out_492949424303976863[41] = 0;
   out_492949424303976863[42] = 1;
   out_492949424303976863[43] = 0;
   out_492949424303976863[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_492949424303976863[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_492949424303976863[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_492949424303976863[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_492949424303976863[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_492949424303976863[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_492949424303976863[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_492949424303976863[51] = 0;
   out_492949424303976863[52] = 0;
   out_492949424303976863[53] = 0;
   out_492949424303976863[54] = 0;
   out_492949424303976863[55] = 0;
   out_492949424303976863[56] = 0;
   out_492949424303976863[57] = 0;
   out_492949424303976863[58] = 0;
   out_492949424303976863[59] = 0;
   out_492949424303976863[60] = 0;
   out_492949424303976863[61] = 0;
   out_492949424303976863[62] = 1;
   out_492949424303976863[63] = 0;
   out_492949424303976863[64] = 0;
   out_492949424303976863[65] = 1;
}
void h_12(double *state, double *unused, double *out_4164990670209354339) {
   out_4164990670209354339[0] = state[0];
   out_4164990670209354339[1] = state[1];
   out_4164990670209354339[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6308363217514901560) {
   out_6308363217514901560[0] = 1;
   out_6308363217514901560[1] = 0;
   out_6308363217514901560[2] = 0;
   out_6308363217514901560[3] = 0;
   out_6308363217514901560[4] = 0;
   out_6308363217514901560[5] = 0;
   out_6308363217514901560[6] = 0;
   out_6308363217514901560[7] = 0;
   out_6308363217514901560[8] = 0;
   out_6308363217514901560[9] = 0;
   out_6308363217514901560[10] = 0;
   out_6308363217514901560[11] = 0;
   out_6308363217514901560[12] = 0;
   out_6308363217514901560[13] = 0;
   out_6308363217514901560[14] = 0;
   out_6308363217514901560[15] = 0;
   out_6308363217514901560[16] = 0;
   out_6308363217514901560[17] = 0;
   out_6308363217514901560[18] = 0;
   out_6308363217514901560[19] = 0;
   out_6308363217514901560[20] = 0;
   out_6308363217514901560[21] = 0;
   out_6308363217514901560[22] = 0;
   out_6308363217514901560[23] = 1;
   out_6308363217514901560[24] = 0;
   out_6308363217514901560[25] = 0;
   out_6308363217514901560[26] = 0;
   out_6308363217514901560[27] = 0;
   out_6308363217514901560[28] = 0;
   out_6308363217514901560[29] = 0;
   out_6308363217514901560[30] = 0;
   out_6308363217514901560[31] = 0;
   out_6308363217514901560[32] = 0;
   out_6308363217514901560[33] = 0;
   out_6308363217514901560[34] = 0;
   out_6308363217514901560[35] = 0;
   out_6308363217514901560[36] = 0;
   out_6308363217514901560[37] = 0;
   out_6308363217514901560[38] = 0;
   out_6308363217514901560[39] = 0;
   out_6308363217514901560[40] = 0;
   out_6308363217514901560[41] = 0;
   out_6308363217514901560[42] = 0;
   out_6308363217514901560[43] = 0;
   out_6308363217514901560[44] = 0;
   out_6308363217514901560[45] = 0;
   out_6308363217514901560[46] = 1;
   out_6308363217514901560[47] = 0;
   out_6308363217514901560[48] = 0;
   out_6308363217514901560[49] = 0;
   out_6308363217514901560[50] = 0;
   out_6308363217514901560[51] = 0;
   out_6308363217514901560[52] = 0;
   out_6308363217514901560[53] = 0;
   out_6308363217514901560[54] = 0;
   out_6308363217514901560[55] = 0;
   out_6308363217514901560[56] = 0;
   out_6308363217514901560[57] = 0;
   out_6308363217514901560[58] = 0;
   out_6308363217514901560[59] = 0;
   out_6308363217514901560[60] = 0;
   out_6308363217514901560[61] = 0;
   out_6308363217514901560[62] = 0;
   out_6308363217514901560[63] = 0;
   out_6308363217514901560[64] = 0;
   out_6308363217514901560[65] = 0;
}
void h_31(double *state, double *unused, double *out_5706607973709820228) {
   out_5706607973709820228[0] = state[7];
   out_5706607973709820228[1] = state[8];
   out_5706607973709820228[2] = state[9];
}
void H_31(double *state, double *unused, double *out_2007896961205058444) {
   out_2007896961205058444[0] = 0;
   out_2007896961205058444[1] = 0;
   out_2007896961205058444[2] = 0;
   out_2007896961205058444[3] = 0;
   out_2007896961205058444[4] = 0;
   out_2007896961205058444[5] = 0;
   out_2007896961205058444[6] = 0;
   out_2007896961205058444[7] = 1;
   out_2007896961205058444[8] = 0;
   out_2007896961205058444[9] = 0;
   out_2007896961205058444[10] = 0;
   out_2007896961205058444[11] = 0;
   out_2007896961205058444[12] = 0;
   out_2007896961205058444[13] = 0;
   out_2007896961205058444[14] = 0;
   out_2007896961205058444[15] = 0;
   out_2007896961205058444[16] = 0;
   out_2007896961205058444[17] = 0;
   out_2007896961205058444[18] = 0;
   out_2007896961205058444[19] = 0;
   out_2007896961205058444[20] = 0;
   out_2007896961205058444[21] = 0;
   out_2007896961205058444[22] = 0;
   out_2007896961205058444[23] = 0;
   out_2007896961205058444[24] = 0;
   out_2007896961205058444[25] = 0;
   out_2007896961205058444[26] = 0;
   out_2007896961205058444[27] = 0;
   out_2007896961205058444[28] = 0;
   out_2007896961205058444[29] = 0;
   out_2007896961205058444[30] = 1;
   out_2007896961205058444[31] = 0;
   out_2007896961205058444[32] = 0;
   out_2007896961205058444[33] = 0;
   out_2007896961205058444[34] = 0;
   out_2007896961205058444[35] = 0;
   out_2007896961205058444[36] = 0;
   out_2007896961205058444[37] = 0;
   out_2007896961205058444[38] = 0;
   out_2007896961205058444[39] = 0;
   out_2007896961205058444[40] = 0;
   out_2007896961205058444[41] = 0;
   out_2007896961205058444[42] = 0;
   out_2007896961205058444[43] = 0;
   out_2007896961205058444[44] = 0;
   out_2007896961205058444[45] = 0;
   out_2007896961205058444[46] = 0;
   out_2007896961205058444[47] = 0;
   out_2007896961205058444[48] = 0;
   out_2007896961205058444[49] = 0;
   out_2007896961205058444[50] = 0;
   out_2007896961205058444[51] = 0;
   out_2007896961205058444[52] = 0;
   out_2007896961205058444[53] = 1;
   out_2007896961205058444[54] = 0;
   out_2007896961205058444[55] = 0;
   out_2007896961205058444[56] = 0;
   out_2007896961205058444[57] = 0;
   out_2007896961205058444[58] = 0;
   out_2007896961205058444[59] = 0;
   out_2007896961205058444[60] = 0;
   out_2007896961205058444[61] = 0;
   out_2007896961205058444[62] = 0;
   out_2007896961205058444[63] = 0;
   out_2007896961205058444[64] = 0;
   out_2007896961205058444[65] = 0;
}
void h_32(double *state, double *unused, double *out_7762004935965751907) {
   out_7762004935965751907[0] = state[3];
   out_7762004935965751907[1] = state[4];
   out_7762004935965751907[2] = state[5];
   out_7762004935965751907[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6609159659451218754) {
   out_6609159659451218754[0] = 0;
   out_6609159659451218754[1] = 0;
   out_6609159659451218754[2] = 0;
   out_6609159659451218754[3] = 1;
   out_6609159659451218754[4] = 0;
   out_6609159659451218754[5] = 0;
   out_6609159659451218754[6] = 0;
   out_6609159659451218754[7] = 0;
   out_6609159659451218754[8] = 0;
   out_6609159659451218754[9] = 0;
   out_6609159659451218754[10] = 0;
   out_6609159659451218754[11] = 0;
   out_6609159659451218754[12] = 0;
   out_6609159659451218754[13] = 0;
   out_6609159659451218754[14] = 0;
   out_6609159659451218754[15] = 0;
   out_6609159659451218754[16] = 0;
   out_6609159659451218754[17] = 0;
   out_6609159659451218754[18] = 0;
   out_6609159659451218754[19] = 0;
   out_6609159659451218754[20] = 0;
   out_6609159659451218754[21] = 0;
   out_6609159659451218754[22] = 0;
   out_6609159659451218754[23] = 0;
   out_6609159659451218754[24] = 0;
   out_6609159659451218754[25] = 0;
   out_6609159659451218754[26] = 1;
   out_6609159659451218754[27] = 0;
   out_6609159659451218754[28] = 0;
   out_6609159659451218754[29] = 0;
   out_6609159659451218754[30] = 0;
   out_6609159659451218754[31] = 0;
   out_6609159659451218754[32] = 0;
   out_6609159659451218754[33] = 0;
   out_6609159659451218754[34] = 0;
   out_6609159659451218754[35] = 0;
   out_6609159659451218754[36] = 0;
   out_6609159659451218754[37] = 0;
   out_6609159659451218754[38] = 0;
   out_6609159659451218754[39] = 0;
   out_6609159659451218754[40] = 0;
   out_6609159659451218754[41] = 0;
   out_6609159659451218754[42] = 0;
   out_6609159659451218754[43] = 0;
   out_6609159659451218754[44] = 0;
   out_6609159659451218754[45] = 0;
   out_6609159659451218754[46] = 0;
   out_6609159659451218754[47] = 0;
   out_6609159659451218754[48] = 0;
   out_6609159659451218754[49] = 1;
   out_6609159659451218754[50] = 0;
   out_6609159659451218754[51] = 0;
   out_6609159659451218754[52] = 0;
   out_6609159659451218754[53] = 0;
   out_6609159659451218754[54] = 0;
   out_6609159659451218754[55] = 0;
   out_6609159659451218754[56] = 0;
   out_6609159659451218754[57] = 0;
   out_6609159659451218754[58] = 0;
   out_6609159659451218754[59] = 0;
   out_6609159659451218754[60] = 0;
   out_6609159659451218754[61] = 0;
   out_6609159659451218754[62] = 0;
   out_6609159659451218754[63] = 0;
   out_6609159659451218754[64] = 0;
   out_6609159659451218754[65] = 0;
   out_6609159659451218754[66] = 0;
   out_6609159659451218754[67] = 0;
   out_6609159659451218754[68] = 0;
   out_6609159659451218754[69] = 0;
   out_6609159659451218754[70] = 0;
   out_6609159659451218754[71] = 0;
   out_6609159659451218754[72] = 1;
   out_6609159659451218754[73] = 0;
   out_6609159659451218754[74] = 0;
   out_6609159659451218754[75] = 0;
   out_6609159659451218754[76] = 0;
   out_6609159659451218754[77] = 0;
   out_6609159659451218754[78] = 0;
   out_6609159659451218754[79] = 0;
   out_6609159659451218754[80] = 0;
   out_6609159659451218754[81] = 0;
   out_6609159659451218754[82] = 0;
   out_6609159659451218754[83] = 0;
   out_6609159659451218754[84] = 0;
   out_6609159659451218754[85] = 0;
   out_6609159659451218754[86] = 0;
   out_6609159659451218754[87] = 0;
}
void h_13(double *state, double *unused, double *out_5405810379734963908) {
   out_5405810379734963908[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5405810379734963908[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5405810379734963908[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_6535263366373938463) {
   out_6535263366373938463[0] = 0;
   out_6535263366373938463[1] = 0;
   out_6535263366373938463[2] = 0;
   out_6535263366373938463[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6535263366373938463[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6535263366373938463[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_6535263366373938463[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6535263366373938463[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_6535263366373938463[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_6535263366373938463[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_6535263366373938463[10] = 0;
   out_6535263366373938463[11] = 0;
   out_6535263366373938463[12] = 0;
   out_6535263366373938463[13] = 0;
   out_6535263366373938463[14] = 0;
   out_6535263366373938463[15] = 0;
   out_6535263366373938463[16] = 0;
   out_6535263366373938463[17] = 0;
   out_6535263366373938463[18] = 0;
   out_6535263366373938463[19] = 0;
   out_6535263366373938463[20] = 0;
   out_6535263366373938463[21] = 0;
   out_6535263366373938463[22] = 0;
   out_6535263366373938463[23] = 0;
   out_6535263366373938463[24] = 0;
   out_6535263366373938463[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6535263366373938463[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6535263366373938463[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6535263366373938463[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_6535263366373938463[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_6535263366373938463[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_6535263366373938463[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_6535263366373938463[32] = 0;
   out_6535263366373938463[33] = 0;
   out_6535263366373938463[34] = 0;
   out_6535263366373938463[35] = 0;
   out_6535263366373938463[36] = 0;
   out_6535263366373938463[37] = 0;
   out_6535263366373938463[38] = 0;
   out_6535263366373938463[39] = 0;
   out_6535263366373938463[40] = 0;
   out_6535263366373938463[41] = 0;
   out_6535263366373938463[42] = 0;
   out_6535263366373938463[43] = 0;
   out_6535263366373938463[44] = 0;
   out_6535263366373938463[45] = 0;
   out_6535263366373938463[46] = 0;
   out_6535263366373938463[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6535263366373938463[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_6535263366373938463[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6535263366373938463[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6535263366373938463[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_6535263366373938463[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_6535263366373938463[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_6535263366373938463[54] = 0;
   out_6535263366373938463[55] = 0;
   out_6535263366373938463[56] = 0;
   out_6535263366373938463[57] = 0;
   out_6535263366373938463[58] = 0;
   out_6535263366373938463[59] = 0;
   out_6535263366373938463[60] = 0;
   out_6535263366373938463[61] = 0;
   out_6535263366373938463[62] = 0;
   out_6535263366373938463[63] = 0;
   out_6535263366373938463[64] = 0;
   out_6535263366373938463[65] = 0;
}
void h_14(double *state, double *unused, double *out_8102558235427240065) {
   out_8102558235427240065[0] = state[10];
   out_8102558235427240065[1] = state[11];
   out_8102558235427240065[2] = state[12];
}
void H_14(double *state, double *unused, double *out_1530096456112530410) {
   out_1530096456112530410[0] = 0;
   out_1530096456112530410[1] = 0;
   out_1530096456112530410[2] = 0;
   out_1530096456112530410[3] = 0;
   out_1530096456112530410[4] = 0;
   out_1530096456112530410[5] = 0;
   out_1530096456112530410[6] = 0;
   out_1530096456112530410[7] = 0;
   out_1530096456112530410[8] = 0;
   out_1530096456112530410[9] = 0;
   out_1530096456112530410[10] = 1;
   out_1530096456112530410[11] = 0;
   out_1530096456112530410[12] = 0;
   out_1530096456112530410[13] = 0;
   out_1530096456112530410[14] = 0;
   out_1530096456112530410[15] = 0;
   out_1530096456112530410[16] = 0;
   out_1530096456112530410[17] = 0;
   out_1530096456112530410[18] = 0;
   out_1530096456112530410[19] = 0;
   out_1530096456112530410[20] = 0;
   out_1530096456112530410[21] = 0;
   out_1530096456112530410[22] = 0;
   out_1530096456112530410[23] = 0;
   out_1530096456112530410[24] = 0;
   out_1530096456112530410[25] = 0;
   out_1530096456112530410[26] = 0;
   out_1530096456112530410[27] = 0;
   out_1530096456112530410[28] = 0;
   out_1530096456112530410[29] = 0;
   out_1530096456112530410[30] = 0;
   out_1530096456112530410[31] = 0;
   out_1530096456112530410[32] = 0;
   out_1530096456112530410[33] = 1;
   out_1530096456112530410[34] = 0;
   out_1530096456112530410[35] = 0;
   out_1530096456112530410[36] = 0;
   out_1530096456112530410[37] = 0;
   out_1530096456112530410[38] = 0;
   out_1530096456112530410[39] = 0;
   out_1530096456112530410[40] = 0;
   out_1530096456112530410[41] = 0;
   out_1530096456112530410[42] = 0;
   out_1530096456112530410[43] = 0;
   out_1530096456112530410[44] = 0;
   out_1530096456112530410[45] = 0;
   out_1530096456112530410[46] = 0;
   out_1530096456112530410[47] = 0;
   out_1530096456112530410[48] = 0;
   out_1530096456112530410[49] = 0;
   out_1530096456112530410[50] = 0;
   out_1530096456112530410[51] = 0;
   out_1530096456112530410[52] = 0;
   out_1530096456112530410[53] = 0;
   out_1530096456112530410[54] = 0;
   out_1530096456112530410[55] = 0;
   out_1530096456112530410[56] = 1;
   out_1530096456112530410[57] = 0;
   out_1530096456112530410[58] = 0;
   out_1530096456112530410[59] = 0;
   out_1530096456112530410[60] = 0;
   out_1530096456112530410[61] = 0;
   out_1530096456112530410[62] = 0;
   out_1530096456112530410[63] = 0;
   out_1530096456112530410[64] = 0;
   out_1530096456112530410[65] = 0;
}
void h_33(double *state, double *unused, double *out_2591779336706256217) {
   out_2591779336706256217[0] = state[16];
   out_2591779336706256217[1] = state[17];
   out_2591779336706256217[2] = state[18];
}
void H_33(double *state, double *unused, double *out_760096582859547920) {
   out_760096582859547920[0] = 0;
   out_760096582859547920[1] = 0;
   out_760096582859547920[2] = 0;
   out_760096582859547920[3] = 0;
   out_760096582859547920[4] = 0;
   out_760096582859547920[5] = 0;
   out_760096582859547920[6] = 0;
   out_760096582859547920[7] = 0;
   out_760096582859547920[8] = 0;
   out_760096582859547920[9] = 0;
   out_760096582859547920[10] = 0;
   out_760096582859547920[11] = 0;
   out_760096582859547920[12] = 0;
   out_760096582859547920[13] = 0;
   out_760096582859547920[14] = 0;
   out_760096582859547920[15] = 0;
   out_760096582859547920[16] = 1;
   out_760096582859547920[17] = 0;
   out_760096582859547920[18] = 0;
   out_760096582859547920[19] = 0;
   out_760096582859547920[20] = 0;
   out_760096582859547920[21] = 0;
   out_760096582859547920[22] = 0;
   out_760096582859547920[23] = 0;
   out_760096582859547920[24] = 0;
   out_760096582859547920[25] = 0;
   out_760096582859547920[26] = 0;
   out_760096582859547920[27] = 0;
   out_760096582859547920[28] = 0;
   out_760096582859547920[29] = 0;
   out_760096582859547920[30] = 0;
   out_760096582859547920[31] = 0;
   out_760096582859547920[32] = 0;
   out_760096582859547920[33] = 0;
   out_760096582859547920[34] = 0;
   out_760096582859547920[35] = 0;
   out_760096582859547920[36] = 0;
   out_760096582859547920[37] = 0;
   out_760096582859547920[38] = 0;
   out_760096582859547920[39] = 1;
   out_760096582859547920[40] = 0;
   out_760096582859547920[41] = 0;
   out_760096582859547920[42] = 0;
   out_760096582859547920[43] = 0;
   out_760096582859547920[44] = 0;
   out_760096582859547920[45] = 0;
   out_760096582859547920[46] = 0;
   out_760096582859547920[47] = 0;
   out_760096582859547920[48] = 0;
   out_760096582859547920[49] = 0;
   out_760096582859547920[50] = 0;
   out_760096582859547920[51] = 0;
   out_760096582859547920[52] = 0;
   out_760096582859547920[53] = 0;
   out_760096582859547920[54] = 0;
   out_760096582859547920[55] = 0;
   out_760096582859547920[56] = 0;
   out_760096582859547920[57] = 0;
   out_760096582859547920[58] = 0;
   out_760096582859547920[59] = 0;
   out_760096582859547920[60] = 0;
   out_760096582859547920[61] = 0;
   out_760096582859547920[62] = 1;
   out_760096582859547920[63] = 0;
   out_760096582859547920[64] = 0;
   out_760096582859547920[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5893259616952359995) {
  H(in_vec, out_5893259616952359995);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4830021671970159035) {
  err_fun(nom_x, delta_x, out_4830021671970159035);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_3922488873627355783) {
  inv_err_fun(nom_x, true_x, out_3922488873627355783);
}
void live_H_mod_fun(double *state, double *out_5660387373054586398) {
  H_mod_fun(state, out_5660387373054586398);
}
void live_f_fun(double *state, double dt, double *out_8710621012237093742) {
  f_fun(state,  dt, out_8710621012237093742);
}
void live_F_fun(double *state, double dt, double *out_7370016201918838578) {
  F_fun(state,  dt, out_7370016201918838578);
}
void live_h_4(double *state, double *unused, double *out_1965350356141844935) {
  h_4(state, unused, out_1965350356141844935);
}
void live_H_4(double *state, double *unused, double *out_5757122479151917060) {
  H_4(state, unused, out_5757122479151917060);
}
void live_h_9(double *state, double *unused, double *out_8102558235427240065) {
  h_9(state, unused, out_8102558235427240065);
}
void live_H_9(double *state, double *unused, double *out_1530096456112530410) {
  H_9(state, unused, out_1530096456112530410);
}
void live_h_10(double *state, double *unused, double *out_5367289565694616813) {
  h_10(state, unused, out_5367289565694616813);
}
void live_H_10(double *state, double *unused, double *out_492949424303976863) {
  H_10(state, unused, out_492949424303976863);
}
void live_h_12(double *state, double *unused, double *out_4164990670209354339) {
  h_12(state, unused, out_4164990670209354339);
}
void live_H_12(double *state, double *unused, double *out_6308363217514901560) {
  H_12(state, unused, out_6308363217514901560);
}
void live_h_31(double *state, double *unused, double *out_5706607973709820228) {
  h_31(state, unused, out_5706607973709820228);
}
void live_H_31(double *state, double *unused, double *out_2007896961205058444) {
  H_31(state, unused, out_2007896961205058444);
}
void live_h_32(double *state, double *unused, double *out_7762004935965751907) {
  h_32(state, unused, out_7762004935965751907);
}
void live_H_32(double *state, double *unused, double *out_6609159659451218754) {
  H_32(state, unused, out_6609159659451218754);
}
void live_h_13(double *state, double *unused, double *out_5405810379734963908) {
  h_13(state, unused, out_5405810379734963908);
}
void live_H_13(double *state, double *unused, double *out_6535263366373938463) {
  H_13(state, unused, out_6535263366373938463);
}
void live_h_14(double *state, double *unused, double *out_8102558235427240065) {
  h_14(state, unused, out_8102558235427240065);
}
void live_H_14(double *state, double *unused, double *out_1530096456112530410) {
  H_14(state, unused, out_1530096456112530410);
}
void live_h_33(double *state, double *unused, double *out_2591779336706256217) {
  h_33(state, unused, out_2591779336706256217);
}
void live_H_33(double *state, double *unused, double *out_760096582859547920) {
  H_33(state, unused, out_760096582859547920);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
